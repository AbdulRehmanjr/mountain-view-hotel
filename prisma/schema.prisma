generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  accountId   String        @id @default(uuid())
  email       String        @unique
  password    String
  GoogleToken GoogleToken[]
  Hotel       Hotel[]

  @@map("accounts")
}

model Hotel {
  hotelId     String     @id @default(uuid())
  hotelName   String     @default("none")
  hotelLogo   String     @default("https://res.cloudinary.com/dbjiys9se/image/upload/v1723287288/kolibristay/logo_primary_cigsju.png")
  type        Int        @default(1)
  island      String     @default("none")
  address     String     @default("none")
  longitude   Float      @default(0.0)
  latitude    Float      @default(0.0)
  description String     @default("none")
  firstName   String     @default("none")
  lastName    String     @default("none")
  email       String     @default("none")
  phone       String     @default("none")
  checkIn     String     @default("none")
  checkOut    String     @default("none")
  code        String     @unique @default(uuid())
  createdAt   DateTime   @default(now())
  accountId   String
  Extras      Extras[]
  account     Account    @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
  RatePlan    RatePlan[]
  Room        Room[]

  @@map("hotels")
}

model Extras {
  extrasId  String   @id @default(uuid())
  name      String   @default("none")
  price     Int      @default(0)
  createdAt DateTime @default(now())
  hotelId   String
  hotel     Hotel    @relation(fields: [hotelId], references: [hotelId])

  @@map("extras")
}

model Room {
  roomId       String         @id @default(uuid())
  code         String         @unique @default(uuid())
  roomName     String         @default("none")
  capacity     Int            @default(0)
  area         Int            @default(0)
  features     String[]
  description  String         @default("none")
  roomType     String         @default("none")
  dp           String         @default("none")
  beds         Int            @default(0)
  quantity     Int            @default(1)
  price        Int            @default(1)
  pictures     String[]
  hotelId      String
  BlockDate    BlockDate[]
  RoomBooking  RoomBooking[]
  RoomRatePlan RoomRatePlan[]
  hotel        Hotel          @relation(fields: [hotelId], references: [hotelId], onDelete: Cascade)

  @@map("rooms")
}

model RatePlan {
  ratePlanId   String         @id @default(uuid())
  code         String         @unique @default(uuid())
  name         String         @default("none")
  description  String         @default("none")
  mealId       Int            @default(15)
  hotelId      String
  hotel        Hotel          @relation(fields: [hotelId], references: [hotelId])
  RoomRatePlan RoomRatePlan[]

  @@map("rateplans")
}

model RoomRatePlan {
  rrpId     String      @id @default(uuid())
  quantity  Int         @default(0)
  hotelName String      @default("none")
  hotelId   String      @default("none")
  isManage  Boolean     @default(false)
  rateId    String
  roomId    String
  RoomPrice RoomPrice[]
  rate      RatePlan    @relation(fields: [rateId], references: [ratePlanId], onDelete: Cascade)
  room      Room        @relation(fields: [roomId], references: [roomId])

  @@index([roomId, rateId])
  @@map("roomrateplans")
}

model RoomPrice {
  priceId      String       @id @default(uuid())
  startDate    String       @default("none")
  endDate      String       @default("none")
  planCode     String       @default("none")
  price        Int          @default(0)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now()) @updatedAt
  rrpId        String
  roomRatePlan RoomRatePlan @relation(fields: [rrpId], references: [rrpId], onDelete: Cascade)

  @@map("roomprices")
}

model RoomBooking {
  bookingId       String         @id @default(uuid())
  startDate       String         @default("none")
  endDate         String         @default("none")
  isRefund        Boolean        @default(false)
  price           Int            @default(0)
  type            String         @default("none")
  mealType        String         @default("none")
  extras          String[]
  bookingDetailId String
  roomId          String
  payPalBookingId String?
  quantity        Int            @default(1)
  adults          Int            @default(1)
  children        Int            @default(0)
  bookingDetails  BookingDetail  @relation(fields: [bookingDetailId], references: [bookingDetailId])
  PayPalBooking   PayPalBooking? @relation(fields: [payPalBookingId], references: [paypalBookingId])
  Room            Room           @relation(fields: [roomId], references: [roomId], onDelete: Cascade)

  @@map("roombookings")
}

model BookingDetail {
  bookingDetailId String        @id @default(uuid())
  city            String        @default("none")
  country         String        @default("none")
  phone           String        @default("none")
  address         String        @default("none")
  email           String        @default("none")
  arrivalTime     String        @default("none")
  firstName       String        @default("none")
  lastName        String        @default("none")
  zip             String        @default("none")
  RoomBooking     RoomBooking[]

  @@map("bookingdetails")
}

model BlockDate {
  blockId   String   @id @default(uuid())
  startDate String   @default("none")
  endDate   String   @default("none")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  roomId    String
  room      Room     @relation(fields: [roomId], references: [roomId], onDelete: Cascade)

  @@map("blockdates")
}

model GoogleToken {
  tokenId      String  @id @default(uuid())
  email        String  @default("none")
  refreshToken String  @default("none")
  accountId    String
  account      Account @relation(fields: [accountId], references: [accountId])

  @@index([email])
  @@map("googletokens")
}

model Discounts {
  discountId String   @id @default(uuid())
  discount   Int      @default(0)
  title      String   @default("none")
  redeemCode String   @unique
  endDate    String   @default("none")
  startDate  String   @default("none")
  createdAt  DateTime @default(now())

  @@map("discounts")
}

model SellerPayPal {
  sellerPayPalId  String @id @default(uuid())
  trackingId      String @unique
  merchantId      String @default("none")
  partnerClientId String @default("none")
  email           String @unique

  @@index([email, trackingId])
  @@map("sellerpaypals")
}

model PayPalBooking {
  paymentEmail    String        @default("none")
  captureId       String
  payerId         String        @default("none")
  paymentId       String        @default("none")
  contactEmail    String        @default("none")
  createdAt       DateTime      @default(now())
  paypalBookingId String        @id @default(uuid())
  RoomBooking     RoomBooking[]

  @@map("paypalbookings")
}
